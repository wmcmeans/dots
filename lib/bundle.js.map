{"version":3,"sources":["webpack/bootstrap 07f3b7ba814cd00cf773","./lib/main.js","./lib/dots-view.js","./lib/dots.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACLD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC5CA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAiB,OAAO;AACxB;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/lib/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 07f3b7ba814cd00cf773\n **/","var DotsView = require('./dots-view');\n\n$(function () {\n  var rootEl = $('.dots-game');\n  new DotsView(rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Board = require('./dots.js');\n\nvar View = function ($el) {\n  this.$el = $el;\n\n  this.board = new Board();\n  this.setupGrid();\n\n  this.render();\n  $('.dots-game').on(\"click\", this.handleClickEvent.bind(this));\n};\n\nView.prototype.handleClickEvent = function (event) {\n  // debugger\n};\n\nView.prototype.render = function () {\n  this.updateClasses(this.board.grid);\n};\n\nView.prototype.updateClasses = function () {\n  this.$li.removeClass();\n\n  this.board.grid.forEach(function (row, i) {\n    row.forEach(function (dot, j) {\n      this.$li.filter(\"#\" + i + \"-\" + j).addClass(dot.color);\n    }.bind(this));\n  }.bind(this));\n};\n\nView.prototype.setupGrid = function () {\n  var html = \"\";\n  for (var i = 0; i < 6; i++) {\n    html += \"<ul class='row'>\";\n    for (var j = 0; j < 6; j++) {\n      html += (\"<li id='\" + i + \"-\" + j + \"'></li>\");\n    }\n    html += \"</ul>\";\n  }\n\n  this.$el.html(html);\n  this.$li = this.$el.find(\"li\");\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/dots-view.js\n ** module id = 1\n ** module chunks = 0\n **/","var Dot = function (options) {\n  this.pos = options.pos;\n  this.color = options.color;\n};\n\nDot.prototype.canConnectWith = function (otherDot) {\n  return neighboringDots(this.pos, otherDot.pos) && this.color === otherDot.color;\n};\n\nvar neighboringDots = function (pos1, pos2) {\n  return (pos1[0] <= pos2[0] + 1 && pos1[0] >= pos2[0] - 1) &&\n    (pos1[1] <= pos2[1] + 1 && pos1[1] >= pos2[1] - 1);\n};\n\nvar Board = function () {\n   this.setup();\n};\n\nBoard.colors = [\n  \"purple\",\n  \"green\",\n  \"blue\",\n  \"red\",\n  \"yellow\"\n];\n\nvar randomColor = function () {\n  var idx = Math.floor(Math.random() * 6);\n  return Board.colors[idx];\n};\n\nBoard.prototype.setup = function () {\n  this.grid = [];\n\n  for (var i = 0; i < 6; i++) {\n    var row = [];\n    for (var j = 0; j < 6; j++) {\n      var dot = new Dot ({\n        pos: [i, j],\n        color: randomColor()\n      });\n      row.push(dot);\n    }\n    this.grid.push(row);\n  }\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/dots.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}