{"version":3,"sources":["webpack/bootstrap f03a34c73ffbbc507b53","./lib/main.js","./lib/dots-view.js","./lib/board.js","./lib/game.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACLD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,WAAU;AACV,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,OAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;AACL;AACA;AACA,QAAO;AACP;;;AAGA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,WAAU;AACV;AACA,OAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1MA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,kBAAiB,OAAO;AACxB;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,yBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA,IAAG;AACH;;AAEA;;;;;;;ACzGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/lib/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f03a34c73ffbbc507b53\n **/","var DotsView = require('./dots-view');\n\n$(function () {\n  var rootEl = $('.dots-game');\n  new DotsView(rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Board = require('./board.js');\nvar Game = require('./game.js');\n\nvar View = function ($el) {\n  this.$el = $el;\n\n  this.board = new Board();\n  this.game = new Game(this.board);\n\n  this.setupScoreBoard();\n  this.setupGrid();\n  this.score = 0;\n  this.moves = 30;\n\n  this.render();\n  $('.dots-game').on(\"mousedown\", this.handleDotClick.bind(this));\n  $('.dots-game').on('mouseup', this.endMove.bind(this));\n\n  // $(function() {\n  //     $(\"div\").hover(function(e) {\n  //         var edge = closestEdge(e.pageX, e.pageY, $(this).width(), $(this).height());\n  //         console.log(\"in: \" + edge);\n  //     }, function(e) {\n  //         var edge = closestEdge(e.pageX, e.pageY, $(this).width(), $(this).height());\n  //         console.log(\"out: \" + edge);\n  //     });\n  // });\n  //\n  // $(function() {\n  //     $(\"div.whatever\").hover(function(e) {\n  //         var edge = closestEdge(\n  //           e.pageX - $(this).offset().left,\n  //           e.pageY - $(this).offset().top,\n  //           $(this).width(),\n  //           $(this).height()\n  //         );\n  //         console.log(\"in: \" + edge);\n  //     }, function(e) {\n  //       var edge = closestEdge(\n  //         e.pageX - $(this).offset().left,\n  //         e.pageY - $(this).offset().top,\n  //         $(this).width(),\n  //         $(this).height()\n  //       );\n  //       console.log(\"out: \" + edge);\n  //     });\n  // });\n\n};\n\nView.prototype.handleDotClick = function (event) {\n  var pos = [event.target.id[0], event.target.id[2]];\n  if (typeof pos[0] === \"undefined\") {\n    return;\n  }\n  startDot = this.board.grid[pos[0]][pos[1]];\n  this.board.selectedDots = [startDot];\n  $(event.target).addClass('active');\n\n  dotEntryPoints = [];\n\n  var board = this.board;\n\n  $('div.' + startDot.color).hover(function(e) {\n    var newPos = [e.target.id[0], e.target.id[2]];\n    var newDot = board.grid[newPos[0]][newPos[1]];\n    var prevDot = board.selectedDots[board.selectedDots.length - 1];\n    // debugger\n    if (prevDot.canConnectWith(newDot)) {\n      board.selectedDots.push(newDot);\n\n      var entryEdge = closestEdge(\n        e.pageX - $(this).offset().left,\n        e.pageY - $(this).offset().top,\n        $(this).width(),\n        $(this).height()\n      );\n      dotEntryPoints.push(entryEdge);\n      console.log(entryEdge);\n      $(e.target).addClass('active');\n\n    } else {\n      var prevInstance = board.selectedDots.find(function(dot) {\n        return dot.pos[0] === newDot.pos[0] && dot.pos[1] === newDot.pos[1];\n      });\n    }\n\n\n  }, function(e) {\n    var exitEdge = closestEdge(\n      e.pageX - $(this).offset().left,\n      e.pageY - $(this).offset().top,\n      $(this).width(),\n      $(this).height()\n    );\n    console.log(exitEdge);\n    if (exitEdge === dotEntryPoints[dotEntryPoints.length - 1]) {\n      board.selectedDots.pop();\n      dotEntryPoints.pop();\n      $(e.target).removeClass('active');\n    }\n  });\n\n  //\n  // $('div.' + startDot.color).on('mouseenter', function (e) {\n  //\n  //   $('#' + e.target.id).on('mouseleave', function (e) {\n  //     debugger\n  //   });\n  //\n  //   var newPos = [e.target.id[0], e.target.id[2]];\n  //   var newDot = this.board.grid[newPos[0]][newPos[1]];\n  //   var prevDot = this.board.selectedDots[this.board.selectedDots.length - 1];\n  //   // debugger\n  //   if (prevDot.canConnectWith(newDot)) {\n  //     this.board.selectedDots.push(newDot);\n  //     $(e.target).addClass('active');\n  //   } else {\n  //     var prevInstance = this.board.selectedDots.find(function(dot) {\n  //       return dot.pos[0] === newDot.pos[0] && dot.pos[1] === newDot.pos[1];\n  //     });\n  //   }\n  // }.bind(this));\n};\n\nView.prototype.endMove = function (event) {\n  $('li').off('mouseenter');\n  this.game.scoreDots();\n  this.render();\n};\n\nView.prototype.render = function () {\n  this.updateScore();\n  this.updateClasses();\n};\n\nView.prototype.updateClasses = function () {\n  this.$div.removeClass();\n\n  this.board.grid.forEach(function (column, x) {\n    column.forEach(function (dot, y) {\n      var dotX = dot.pos[0];\n      var dotY = dot.pos[1];\n      this.$div.filter(\"#\" + dotX + \"-\" + dotY).addClass(dot.color);\n    }.bind(this));\n  }.bind(this));\n};\n\nView.prototype.updateScore = function () {\n  this.$moves.html(\"Moves Left: \" + this.game.moves);\n  this.$score.html(\"Score: \" + this.game.score);\n};\n\nView.prototype.setupScoreBoard = function () {\n  var html =  \"<h2 class='scoreboard'>\";\n      html +=   \"<span class='moves-left'></span>\";\n      html +=   \"<span class='score'></span>\";\n      html += \"</h2>\";\n  this.$el.html(html);\n  this.$moves = this.$el.find('.moves-left');\n  this.$score = this.$el.find('.score');\n};\n\nView.prototype.setupGrid = function () {\n  var html = \"\";\n  for (var x = 0; x < 6; x++) {\n    html += \"<ul class='row group'>\";\n    for (var y = 0; y < 6; y++) {\n      html += (\"<li><div id='\" + x + \"-\" + y + \"'></div></li>\");\n    }\n    html += \"</ul>\";\n  }\n\n  this.$el.append(html);\n  this.$div = this.$el.find(\"div\");\n};\n\nclosestEdge = function (x,y,w,h) {\n  var topEdgeDist = distMetric(x,y,w/2,0);\n  var bottomEdgeDist = distMetric(x,y,w/2,h);\n  var leftEdgeDist = distMetric(x,y,0,h/2);\n  var rightEdgeDist = distMetric(x,y,w,h/2);\n  var min = Math.min(topEdgeDist,bottomEdgeDist,leftEdgeDist,rightEdgeDist);\n\n  switch (min) {\n      case leftEdgeDist:\n          return \"left\";\n      case rightEdgeDist:\n          return \"right\";\n      case topEdgeDist:\n          return \"top\";\n      case bottomEdgeDist:\n          return \"bottom\";\n  }\n};\n\nvar distMetric = function (x,y,x2,y2) {\n  var xDiff = x - x2;\n  var yDiff = y - y2;\n  return (xDiff * xDiff) + (yDiff * yDiff);\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/dots-view.js\n ** module id = 1\n ** module chunks = 0\n **/","var DELTAS = [\n  [0, 1],\n  [0, -1],\n  [1, 0],\n  [-1, 0]\n];\n\nvar Dot = function (options) {\n  this.pos = options.pos;\n  this.color = options.color;\n};\n\nDot.prototype.canConnectWith = function (otherDot) {\n  return neighboringDots(this.pos, otherDot.pos) && this.color === otherDot.color;\n};\n\nvar neighboringDots = function (pos1, pos2) {\n  for (var i = 0; i < DELTAS.length; i++) {\n    var x = DELTAS[i][0];\n    var y = DELTAS[i][1];\n    if (pos1[0] + x === pos2[0] && pos1[1] + y === pos2[1]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar Board = function () {\n  this.selectedDots = [];\n  this.setup();\n};\n\nBoard.colors = [\n  \"purple\",\n  \"green\",\n  \"blue\",\n  \"red\",\n  \"yellow\"\n];\n\nvar randomColor = function () {\n  var idx = Math.floor(Math.random() * 5);\n  return Board.colors[idx];\n};\n\nvar dotSort = function (dot1, dot2) {\n  if (dot1.pos[0] === dot2.pos[0]) {\n    // sort so that higher dot is removed first/doesn't disrupt other positions\n    if (dot1.pos[1] > dot2.pos[1]) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else if (dot1.pos[0] > dot2.pos[0]) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nBoard.prototype.checkForSquares = function () {\n\n};\n\nBoard.prototype.setup = function () {\n  this.grid = [];\n\n  for (var x = 0; x < 6; x++) {\n    var column = [];\n    for (var y = 0; y < 6; y++) {\n      var dot = new Dot({\n        pos: [x, y],\n        color: randomColor()\n      });\n      column.push(dot);\n    }\n    this.grid.push(column);\n  }\n};\n\n\nBoard.prototype.update = function () {\n  var sortedDots = this.selectedDots.sort(dotSort);\n\n  this.selectedDots.forEach(function (dot) {\n    var dotColumn = dot.pos[0];\n    var dotRow = dot.pos[1];\n\n    this.grid[dotColumn].splice(dotRow, 1);\n\n    for (var i = dotRow; i < 5; i++) {\n      this.grid[dotColumn][i].pos[1] = i;\n    }\n\n    this.grid[dotColumn].push(\n      new Dot({\n        pos: [dotColumn, i],\n        color: randomColor()\n      })\n    );\n\n  }.bind(this));\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/board.js\n ** module id = 2\n ** module chunks = 0\n **/","var Game = function (board, moves) {\n  this.board = board;\n  this.moves = moves || 30;\n  this.score = 0;\n\n};\n\nGame.prototype.scoreDots = function () {\n  if (this.board.selectedDots.length > 1) {\n    // this.board.checkForSquare();\n    this.score += this.board.selectedDots.length;\n    this.moves -= 1;\n    this.board.update();\n  }\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}